"use strict";var gapiPromise;var registerPromise;function pause(ms){return new Promise(function(resolve){return setTimeout(resolve,ms)})}function isSignedIn(){var auth2=window.gapi&&gapi.auth2&&gapi.auth2.getAuthInstance();return auth2&&auth2.isSignedIn.get()&&auth2}function signIn(){return new Promise(function(resolve,reject){var auth2=window.gapi&&gapi.auth2&&gapi.auth2.getAuthInstance();if(!auth2)return pause(1500).then(function(){return resolve(signIn())});auth2.then(function(){if(auth2.isSignedIn.get())resolve();else{if(!gapiPromise)gapiPromise=auth2.signIn();gapiPromise.then(function(){gapiPromise=null;loadUser();resolve()}).catch(function(){gapiPromise=null;reject()})}}).catch(function(){return reject()})})}function errorHandler(error){if(error.statusText||error.errorMsg)alert("Error: "+error.statusText+"\n\n"+error.errorMsg);else console.error(error)}function newRegisterPromise(){return new Promise(function(resolve,reject){document.body.insertAdjacentHTML("afterbegin","<div class=\"modal\">\n\t\t\t<div class=\"modal-content\"><span class=\"close\">&times;</span><div class=\"modal-inner\"></div></div>\n\t\t</div>");var modal=document.querySelector(".modal");var content=modal.querySelector(".modal-inner");content.innerHTML="<h3>Formulario de registro</h3>\n\t\t<form>\n\t\t\t<table>\n\t\t\t\t<tr><td>Nombre de usuario</td></tr>\n\t\t\t\t<tr><td><input type=\"text\" name=\"username\" required></td></tr>\n\t\t\t\t<tr><td><input type=\"submit\" value=\"Registrarse\"></td></tr>\n\t\t\t</table>\n\t\t</form>";var form=content.querySelector("form");form.onsubmit=function(event){post("/register",{username:form.username.value},true).then(function(){modal.parentNode.removeChild(modal);resolve()}).catch(errorHandler);return false};modal.querySelector(".close").onclick=function(){modal.parentNode.removeChild(modal);reject()}})}function request(method,component,data){var withCredentials=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;return new Promise(function(resolve,reject){var xhr=new XMLHttpRequest;xhr.open(method,component);xhr.responseType="json";if(method=="POST")xhr.setRequestHeader("Content-type","application/json");if(withCredentials){var auth2;if(auth2=isSignedIn())xhr.setRequestHeader("Authorization","Bearer "+auth2.currentUser.get().getAuthResponse().id_token);else{return signIn().then(function(){resolve(request(method,component,data,withCredentials))}).catch(function(){reject({statusText:"Unauthorized",errorMsg:"Sign in required"})})}}xhr.onload=function(){if(xhr.status>=400){if(xhr.response&&xhr.response.error){if(xhr.response.error=="Registration required"){if(!registerPromise)registerPromise=newRegisterPromise();registerPromise.then(function(){registerPromise=null;loadUser();resolve(request(method,component,data,withCredentials))}).catch(function(){registerPromise=null;reject({statusText:xhr.statusText,errorMsg:"Registration required"})})}else if(xhr.response.error=="Invalid token"){signIn().then(function(){resolve(request(method,component,data,withCredentials))}).catch(function(){reject({statusText:"Unauthorized",errorMsg:"Sign in required"})})}else reject({statusText:xhr.statusText,errorMsg:xhr.response.error})}else reject({statusText:xhr.statusText,errorMsg:JSON.stringify(xhr.response,null,3)})}else resolve(xhr.response)};xhr.onerror=function(){return reject({statusText:xhr.statusText,errorMsg:"Request failed"})};xhr.send(JSON.stringify(data))})}function get(component){var withCredentials=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return request("GET",component,null,withCredentials)}function post(component,data){var withCredentials=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;return request("POST",component,data,withCredentials)}
